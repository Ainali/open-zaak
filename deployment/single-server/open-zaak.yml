---

- name: Deploy Open-Zaak on a single server
  hosts: all

  vars:
    # postgresql vars
    postgresql_python_library: python3-psycopg2
    postgresql_hba_entries:
      - { type: local, database: all, user: postgres, auth_method: peer }
      - { type: local, database: all, user: all, auth_method: md5 }
      - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
      - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }
    postgresql_users:
      - name: openzaak
        password: openzaak
    postgresql_databases:
      - name: openzaak
        owner: openzaak

    # certbot vars
    certbot_admin_email: support@maykinmedia.nl
    certbot_create_if_missing: true
    certbot_create_standalone_stop_services: []
    # certbot_create_standalone_stop_services: ['nginx']
    certbot_certs:
      - domains:
          - "{{ inventory_hostname }}"

    # nginx vars
    nginx_http_template_enable: true
    nginx_http_template:
      default:
        template_file: templates/openzaak.conf.j2
        conf_file_name: default.conf
        conf_file_location: /etc/nginx/conf.d/

  pre_tasks:
    - package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common
          - sudo
          - python3-pip

    - name: Checking if we have a strong server-specific DH key
      stat:
        path: /etc/ssl/certs/dhparam.pem
      register: has_dhparams

    - name: Generating strong server-specific DH key (this may take >10 minutes on first run)
      command: openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096
      when: has_dhparams.stat.exists == False

  roles:
    - role: geerlingguy.postgresql
      tags:
        - db
    - role: geerlingguy.docker
    - role: geerlingguy.certbot
    - role: database
    - role: openzaak
      tags:
        - replicas
    - role: nginxinc.nginx
      tags:
        - replicas
