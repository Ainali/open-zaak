---

- name: Deploy Open-Zaak on a single server
  hosts: all

  vars:
    # postgresql vars
    postgresql_version: "11"
    postgresql_data_dir: "/var/lib/postgresql/{{ postgresql_version }}/main"
    postgresql_bin_path: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
    postgresql_config_path: "/etc/postgresql/{{ postgresql_version }}/main"
    postgresql_daemon: "postgresql@{{ postgresql_version }}-main"
    postgresql_packages:
      - "postgresql-{{ postgresql_version }}"
      - "postgresql-contrib-{{ postgresql_version }}"
      - "postgresql-{{ postgresql_version }}-postgis-2.5"
      - libpq-dev

    postgresql_python_library: python3-psycopg2
    postgresql_hba_entries:
      - { type: local, database: all, user: postgres, auth_method: peer }
      - { type: local, database: all, user: all, auth_method: md5 }
      - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
      - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }
    postgresql_users:
      - name: openzaak
        password: openzaak
        port: "{{ openzaak_db_port }}"
    postgresql_databases:
      - name: openzaak
        owner: openzaak
        port: "{{ openzaak_db_port }}"

    # certbot vars
    certbot_admin_email: support@maykinmedia.nl
    certbot_create_if_missing: true
    certbot_create_standalone_stop_services: []
    # certbot_create_standalone_stop_services: ['nginx']
    certbot_certs:
      - domains:
          - "{{ inventory_hostname }}"

    # nginx vars
    nginx_http_template_enable: true
    nginx_http_template:
      default:
        template_file: templates/openzaak.conf.j2
        conf_file_name: default.conf
        conf_file_location: /etc/nginx/conf.d/

    openzaak_replicas:
      - name: openzaak-0
        port: 8000
      - name: openzaak-1
        port: 8001
      - name: openzaak-2
        port: 8002
      # - name: openzaak-3
      #   port: 8003
      # - name: openzaak-4
      #   port: 8004
      # - name: openzaak-5
      #   port: 8005

  pre_tasks:
    - package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common
          - sudo
          - python3-pip

    - name: Checking if we have a strong server-specific DH key
      stat:
        path: /etc/ssl/certs/dhparam.pem
      register: has_dhparams

    - name: Generating strong server-specific DH key (this may take >10 minutes on first run)
      command: openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096
      when: has_dhparams.stat.exists == False

    - name: Set up postgresql debian repo (apt-key)
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Set up postgresql debian repo (apt-key)
      apt_repository:
        repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
        state: present

  roles:
    - role: geerlingguy.postgresql
      tags:
        - db
    - role: geerlingguy.docker
    - role: geerlingguy.certbot
    - role: database
      vars:
        database_port: "{{ openzaak_db_port }}"
    - role: openzaak
      tags:
        - replicas
    - role: nginxinc.nginx
      tags:
        - replicas
