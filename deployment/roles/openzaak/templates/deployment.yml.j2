---

kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  labels:
    app.kubernetes.io/name: django
    app.kubernetes.io/instance: "{{ openzaak_instance }}"
    app.kubernetes.io/version: "{{ openzaak_version }}"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: open-zaak
    app.kubernetes.io/managed-by: Ansible
spec:
  replicas: {{ openzaak_replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: django
      app.kubernetes.io/instance: "{{ openzaak_instance }}"
      app.kubernetes.io/part-of: open-zaak
  template:
    metadata:
      name: openzaak
      labels:
        app.kubernetes.io/name: django
        app.kubernetes.io/instance: "{{ openzaak_instance }}"
        app.kubernetes.io/version: "{{ openzaak_version }}"
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: open-zaak
        app.kubernetes.io/managed-by: Ansible
    spec:
      volumes:
        - name: private-storage
          persistentVolumeClaim:
            claimName: openzaak-test
      containers:
      - name: openzaak
        image: {{ openzaak_image }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "500Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        readinessProbe:
          httpGet:
            path: /
            port: 8000
            httpHeaders:
              - name: Host
                value: localhost
          initialDelaySeconds: 30
          periodSeconds: 30

        livenessProbe:
          httpGet:
            path: /
            port: 8000
            httpHeaders:
              - name: Host
                value: localhost
          initialDelaySeconds: 30
          periodSeconds: 30

        volumeMounts:
          - name: private-storage
            mountPath: /app/private-media
            subPath: openzaak/{{ openzaak_instance }}/private-media

        env:
          # General Django settings
          - name: DJANGO_SETTINGS_MODULE
            value: openzaak.conf.docker
          - name: ALLOWED_HOSTS
            value: "localhost,{{ domain }}"
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: openzaak-secrets
                key: SECRET_KEY

          # Database settings
          - name: DB_HOST
            value: "{{ db_host }}"
          - name: DB_NAME
            value: "{{ db_name }}"
          - name: DB_PORT
            value: "{{ db_port }}"
          - name: DB_USER
            value: "{{ db_username }}"
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: openzaak-secrets
                key: DB_PASSWORD

          # Caches
          - name: CACHE_DEFAULT
            value: "cache:6379/{{ cache_db }}"
          - name: CACHE_AXES
            value: "cache:6379/{{ cache_db }}"


{% if sentry_dsn %}
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: openzaak-secrets
                key: SENTRY_DSN
{% endif %}


